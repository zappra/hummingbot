#################################
###   Global configurations   ###
#################################

# For more detailed information: https://docs.hummingbot.io
template_version: 19

# Exchange configs
bamboo_relay_use_coordinator: false
bamboo_relay_pre_emptive_soft_cancels: false

binance_api_key: null
binance_api_secret: null

binance_us_api_key: null
binance_us_api_secret: null

binance_perpetual_api_key: null
binance_perpetual_api_secret: null

binance_perpetual_testnet_api_key: null
binance_perpetual_testnet_api_secret: null

bittrex_api_key: null
bittrex_secret_key: null

blocktane_api_key: null
blocktane_api_secret: null

coinbase_pro_api_key: null
coinbase_pro_secret_key: null
coinbase_pro_passphrase: null

dydx_eth_private_key: null
dydx_node_address: null

huobi_api_key: null
huobi_secret_key: null

liquid_api_key: null
liquid_secret_key: null

loopring_accountid: null
loopring_exchangeaddress: null
loopring_api_key: null
loopring_private_key: null

kucoin_api_key: null
kucoin_secret_key: null
kucoin_passphrase: null

kraken_api_key: null
kraken_secret_key: null

crypto_com_api_key: null
crypto_com_secret_key: null

eterbase_api_key: null
eterbase_secret_key: null
eterbase_account: null

bitfinex_api_key: null
bitfinex_secret_key: null

okex_api_key: null
okex_secret_key: null
okex_passphrase: null

bitmax_api_key: null
bitmax_secret_key: null

celo_address: null
celo_password: null

terra_wallet_address: null
terra_wallet_seeds: null

balancer_max_swaps: 4

# Ethereum wallet address: required for trading on a DEX
ethereum_wallet: null
ethereum_rpc_url: null
ethereum_rpc_ws_url: null
ethereum_chain_name: MAIN_NET
ethereum_token_list_url: null

# Kill switch
kill_switch_enabled: null
# The rate of performance at which you would want the bot to stop trading (-20 = 20%)
kill_switch_rate: null

# DEX active order cancellation
0x_active_cancels: false

# Paper Trading
paper_trade_enabled: false
paper_trade_account_balance:
  BTC: 1
  USDT: 1000
  ONE: 1000
  USDQ: 1000
  TUSD: 1000
  ETH: 10
  WETH: 10
  USDC: 1000
  DAI: 1000

telegram_enabled: false
telegram_token: null
telegram_chat_id: null

# Error log sharing
send_error_logs: null

# Advanced configs: Do NOT touch unless you understand what you are changing
instance_id: null
log_level: INFO
debug_console: false
strategy_report_interval: 900.0
logger_override_whitelist:
  - hummingbot.strategy.arbitrage
  - hummingbot.strategy.cross_exchange_market_making
  - conf
key_file_path: conf/
log_file_path: logs/
on_chain_cancel_on_exit: false

# Minimum default order amount (in quote currency), this is used for when prompting a new order_amount.
min_quote_order_amount:
  BTC: 0.0011
  ETH: 0.05
  USD: 11
  BNB: 0.5
  USDT: 11
  USDC: 11
  BUSD: 11
  TUSD: 11
  TRY: 11

# Advanced database options, currently supports SQLAlchemy's included dialects
# Reference: https://docs.sqlalchemy.org/en/13/dialects/
db_engine: sqlite
db_host: null
db_port: null
db_username: null
db_password: null
db_name: null

script_enabled: null
script_file_path: null

# Balance Limit Configurations
# e.g. Setting USDT and BTC limits on Binance.
# balance_asset_limit:
#   binance:
#     BTC: 0.1
#     USDT: 1000
balance_asset_limit:
  binance:

# Fixed gas price (in Gwei) for Ethereum transactions
manual_gas_price:
# To enable gas price lookup (true/false)
ethgasstation_gas_enabled:
# API key for defipulse.com gas station API
ethgasstation_api_key:
# Gas level you want to use for Ethereum transactions (fast, fastest, safeLow, average)
ethgasstation_gas_level:
# Refresh time for Ethereum gas price lookups (in seconds)
ethgasstation_refresh_time:
# Gateway API Configurations
# default host to only use localhost
# Port need to match the final installation port for Gateway
gateway_api_host: localhost
gateway_api_port: 5000

# Whether to enable aggregated order and trade data collection
heartbeat_enabled:
# The frequency of sending the aggregated order and trade data (in minutes, e.g. enter 5 for once every 5 minutes)
heartbeat_interval_min:
# a list of binance markets (for trades/pnl reporting) separated by ',' e.g. RLC-USDT,RLC-BTC
binance_markets:
  
# Command Shortcuts
# Define abbreviations for often used commands
# or batch grouped commands together
# eg.
# command_shortcuts:
#   - command: 'spreads'
#     help: 'Set bid and ask spread'  
#     arguments: [2, 'Bid Spread', 'Ask Spread']
#     output: ['config bid_spread $1', 'config ask_spread $2']
#
command_shortcuts:
  - command: inventory
    help: Verbose inventory report
    arguments: []
    output: [script inventory]
  - command: recent
    help: Display recent buy/sell fill history
    arguments: []
    output: [script inventory recent]
  - command: fill
    help: Explcit fill command for correcting missing events
    arguments: [Side (buy/sell), Amount, Price]
    output: [script inventory fill $1 $2 $3]
  - command: combine
    help: Combine inventory items into one
    arguments: [Low price, High Price]
    output: [script inventory combine $1 $2]
  - command: dumpl
    help: Sell inventory at a loss
    arguments: [Base amount to dump]
    output: [script inventory dumpl $1]
  - command: dumpp
    help: Sell inventory with profit
    arguments: [Base amount to dump]
    output: [script inventory dumpp $1]
  - command: sconf
    help: Dump script config
    arguments: []
    output: [script config]
  - command: bid
    help: Set script bid spread
    arguments: [Bid spread]
    output: [script config bid_spread $1]
  - command: order
    help: Set script order amount
    arguments: [Order amount]
    output: [script config order_amount $1]
  - command: plot24
    help: 24 hour plot
    arguments: []
    output: [script plot 24]
  - command: plot
    help: Default plot
    arguments: []
    output: [script plot]
  - command: plotsys
    help: System plot
    arguments: []
    output: [script plotsys]
  - command: refresh
    help: Force order refresh cycle
    arguments: []
    output: [script refresh]
  - command: pause
    help: Pause trading
    arguments: []
    output: [script pause]
  - command: resume
    help: Resume trading
    arguments: []
    output: [script resume]